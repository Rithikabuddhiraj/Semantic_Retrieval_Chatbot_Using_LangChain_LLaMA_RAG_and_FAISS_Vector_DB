This project helped me improve my skills in integrating APIs, handling dynamic data, and creating simple yet effective user interfaces. Overall, I feel this project has practical value and can be genuinely useful for people in their day-to-day lives!My Recipe Recommendation System project was a very interesting experience where I built something useful and practical. Instead of manually entering recipes, I connected it with APIs like Spoonacular and Tasty, which made it possible to fetch a wide variety of recipes directly. This saved a lot of effort and ensured the system always had a large collection of recipes. I wanted to make the platform as user-friendly as possible. The system provides personalised suggestions based on what the user is looking for. I designed it so that recipe details appear just below the image when you click, so there is no need to scroll unnecessarily. The instructions are also fetched and displayed on the same page itself for better convenience. This project helped me improve my skills in integrating APIs, handling dynamic data, and creating simple yet effective user interfaces. Overall, I feel this project has practical value and can be genuinely useful for people in their day-to-day lives.

This project focuses on building an image classification model using a Convolutional Neural Network (CNN) to classify clothing items from the Fashion MNIST dataset. The dataset comprises 60,000 training images and 10,000 test images of fashion items such as shirts, sneakers, coats, and more, each belonging to one of ten categories. Each image is a 28x28 grayscale image. The main objective of this project was to create a robust deep learning model that can effectively recognize and categorize these clothing images based on learned visual patterns.

The architecture of the CNN model includes multiple convolutional layers, max-pooling layers, dropout for regularization, and fully connected dense layers leading to a softmax output. The model was built using TensorFlow and Keras, trained over multiple epochs, and evaluated using categorical cross-entropy loss and accuracy as the metrics. The model achieved a validation accuracy of 89%, indicating strong performance in classifying unseen images in the dataset.

To ensure a smooth deployment process, the model was integrated into a Flask web application. The app allows users to upload an image of a fashion item, and the model predicts and displays the corresponding category. The front-end is designed using HTML and Bootstrap for responsiveness and simplicity, while the backend handles the inference and model loading. This deployment makes the model interactive and accessible, simulating a real-world product classification tool.

The project not only strengthened my understanding of CNNs and deep learning workflows but also gave me hands-on experience in deploying a machine learning model using Flask. It bridges the gap between theoretical ML concepts and practical applications by taking a model from development to a working web app. All the source code, training notebooks, model weights, and deployment files are maintained in a GitHub repository for version control and collaboration.

This project can serve as a base for further enhancements like integrating with a larger fashion e-commerce system, converting the app into a REST API for scalability, or replacing the Fashion MNIST dataset with more complex image datasets for improved real-world relevance. Through this, I was able to demonstrate my capability to handle the end-to-end machine learning lifecycleâ€”from model building to web deployment.

